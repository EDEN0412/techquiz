name: Supabase Migration (Staging)

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  migrate:
    name: Supabase Migration (Staging)
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dnsutils jq
      
      - name: Install Supabase CLI
        run: |
          LATEST_VERSION=$(curl -sL https://api.github.com/repos/supabase/cli/releases/latest | jq -r '.tag_name')
          DEB_URL="https://github.com/supabase/cli/releases/download/${LATEST_VERSION}/supabase_${LATEST_VERSION#v}_linux_amd64.deb"
          echo "Downloading Supabase CLI version ${LATEST_VERSION} from ${DEB_URL}"
          curl -L -o supabase.deb "$DEB_URL"
          sudo dpkg -i supabase.deb
          rm supabase.deb
      
      - name: Verify Supabase CLI Installation
        run: supabase --version
      
      - name: Login to Supabase
        run: supabase login
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: Get Supabase DB IPv4 Address
        id: db_ip
        run: |
          DB_IP=$(dig +short A db.${{ secrets.SUPABASE_STAGING_PROJECT_ID }}.supabase.co)
          echo "IP=${DB_IP}" >> $GITHUB_OUTPUT
          echo "Found DB IP: ${DB_IP}"
      
      - name: Run database migrations
        env:
          PGHOST: ${{ steps.db_ip.outputs.IP }}
          PGPORT: 5432
          PGDATABASE: postgres
          PGUSER: postgres
          PGPASSWORD: ${{ secrets.SUPABASE_STAGING_DB_PASSWORD }}
        run: |
          echo "Setting up supabase link..."
          supabase link --project-ref ${{ secrets.SUPABASE_STAGING_PROJECT_ID }}
          echo "Running supabase db push..."
          supabase db push -p ${{ secrets.SUPABASE_STAGING_DB_PASSWORD }}
      
      - name: Check migration status
        run: |
          echo "Listing applied migrations..."
          supabase migration list -p ${{ secrets.SUPABASE_STAGING_DB_PASSWORD }}
      
      - name: Notify on Success
        if: success()
        run: |
          echo "ステージング環境へのマイグレーションが正常に完了しました"
      
      - name: Notify on Failure
        if: failure()
        run: |
          echo "ステージング環境へのマイグレーションに失敗しました"