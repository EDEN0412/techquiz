name: Supabase Migration (Staging)

on:
  push:
    branches:
      - develop # 開発ブランチにプッシュされた時に実行
  workflow_dispatch:  # 手動実行も可能

jobs:
  migrate:
    name: Supabase Migration (Staging)
    runs-on: ubuntu-latest
    environment: staging  # GitHub Environmentsを使用
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 全てのコミット履歴を取得
      
      # Node.jsのセットアップは不要になったためコメントアウトまたは削除してもOK
      # - name: Setup Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '18'
      
      # --- 追加: DNSユーティリティをインストール ---
      - name: Install dnsutils
        run: |
          sudo apt-get update
          sudo apt-get install -y dnsutils
      
      - name: Install Supabase CLI
        run: |
          # 最新の安定版.debパッケージをダウンロード
          curl -L -o supabase.deb https://github.com/supabase/cli/releases/download/v1.180.0/supabase_1.180.0_linux_amd64.deb
          # .debパッケージをインストール
          sudo dpkg -i supabase.deb
          # 不要になったファイルを削除
          rm supabase.deb
      
      - name: Verify Supabase CLI Installation
        run: supabase --version
      
      - name: Login to Supabase
        run: supabase login
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      # --- 追加: DBホストのIPv4アドレスを取得 ---
      - name: Get Supabase DB IPv4 Address
        id: db_ip
        run: echo "IP=$(dig +short A db.${{ secrets.SUPABASE_STAGING_PROJECT_ID }}.supabase.co)" >> $GITHUB_OUTPUT
      
      - name: Set Supabase Project
        run: |
          supabase link --project-ref ${{ secrets.SUPABASE_STAGING_PROJECT_ID }}
      
      # --- 修正: --db-url を使ってIPv4で接続 ---
      - name: Run database migrations
        run: |
          DB_URL="postgresql://postgres:${{ secrets.SUPABASE_STAGING_DB_PASSWORD }}@${{ steps.db_ip.outputs.IP }}:5432/postgres"
          supabase db push --db-url "$DB_URL"
        # DB_PASSWORD は --db-url に含めたので不要
        # env:
        #   SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_STAGING_DB_PASSWORD }}
      
      - name: Check migration status
        run: |
          supabase migration list
        
      - name: Notify on Success
        if: success()
        run: |
          echo "ステージング環境へのマイグレーションが正常に完了しました"
          # 成功時に通知を送る処理をここに追加（例：Slackへの通知など）
      
      - name: Notify on Failure
        if: failure()
        run: |
          echo "ステージング環境へのマイグレーションに失敗しました"
          # 失敗時に通知を送る処理をここに追加（例：Slackへの通知など） 