name: Supabase Migration (Staging)

on:
  push:
    branches:
      - develop # 開発ブランチにプッシュされた時に実行
  workflow_dispatch:  # 手動実行も可能

jobs:
  migrate:
    name: Supabase Migration (Staging)
    runs-on: ubuntu-latest
    environment: staging  # GitHub Environmentsを使用
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 全てのコミット履歴を取得
      
      # Node.jsのセットアップは不要になったためコメントアウトまたは削除してもOK
      # - name: Setup Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '18'
      
      # --- 追加: DNSユーティリティとjqをインストール ---
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dnsutils jq
      
      # --- 修正: Supabase CLIの最新安定版をインストール ---
      - name: Install Supabase CLI
        run: |
          # GitHub APIから最新の安定版リリースバージョンを取得
          LATEST_VERSION=$(curl -sL https://api.github.com/repos/supabase/cli/releases/latest | jq -r '.tag_name')
          # ダウンロードURLを構築 (ファイル名用に 'v' プレフィックスを削除)
          DEB_URL="https://github.com/supabase/cli/releases/download/${LATEST_VERSION}/supabase_${LATEST_VERSION#v}_linux_amd64.deb"
          echo "Downloading Supabase CLI version ${LATEST_VERSION} from ${DEB_URL}"
          # .debパッケージをダウンロードしてインストール
          curl -L -o supabase.deb "$DEB_URL"
          sudo dpkg -i supabase.deb
          # 不要になったファイルを削除
          rm supabase.deb
      
      - name: Verify Supabase CLI Installation
        run: supabase --version
      
      - name: Login to Supabase
        run: supabase login
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      # --- 追加: DBホストのIPv4アドレスを取得 ---
      - name: Get Supabase DB IPv4 Address
        id: db_ip
        run: echo "IP=$(dig +short A db.${{ secrets.SUPABASE_STAGING_PROJECT_ID }}.supabase.co)" >> $GITHUB_OUTPUT
      
      # --- 修正: PostgreSQL 環境変数を設定して push ---
      - name: Run database migrations
        env:
          # 標準のPostgreSQL環境変数を設定
          PGHOST: ${{ steps.db_ip.outputs.IP }}
          PGPORT: 5432
          PGDATABASE: postgres
          PGUSER: postgres
          PGPASSWORD: ${{ secrets.SUPABASE_STAGING_DB_PASSWORD }}
        run: |
          # 接続フラグは削除し、環境変数に依存
          supabase db push
      
      - name: Check migration status
        run: |
          # migration list はプロジェクト参照が必要なので変更なし
          supabase migration list --project-ref ${{ secrets.SUPABASE_STAGING_PROJECT_ID }}
      
      - name: Notify on Success
        if: success()
        run: |
          echo "ステージング環境へのマイグレーションが正常に完了しました"
          # 成功時に通知を送る処理をここに追加
      
      - name: Notify on Failure
        if: failure()
        run: |
          echo "ステージング環境へのマイグレーションに失敗しました"
          # 失敗時に通知を送る処理をここに追加 