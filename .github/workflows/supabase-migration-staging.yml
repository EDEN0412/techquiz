name: Supabase Migration (Staging)

on:
  push:
    branches:
      - develop # 開発ブランチにプッシュされた時に実行
  workflow_dispatch:  # 手動実行も可能

jobs:
  migrate:
    name: Supabase Migration (Staging)
    runs-on: ubuntu-latest
    environment: staging  # GitHub Environmentsを使用
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 全てのコミット履歴を取得
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Supabase CLI
        run: brew install supabase/tap/supabase # Homebrewを使用してインストール
        env:
          HOMEBREW_NO_INSTALL_FROM_API: 1 # GitHub API制限を回避
      
      - name: Verify Supabase CLI Installation
        run: supabase --version
      
      - name: Login to Supabase
        run: supabase login
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: Set Supabase Project
        run: |
          supabase link --project-ref ${{ secrets.SUPABASE_STAGING_PROJECT_ID }}
      
      - name: Run database migrations
        run: |
          supabase db push
        env:
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_STAGING_DB_PASSWORD }}
      
      - name: Check migration status
        run: |
          supabase migration list
        
      - name: Notify on Success
        if: success()
        run: |
          echo "ステージング環境へのマイグレーションが正常に完了しました"
          # 成功時に通知を送る処理をここに追加（例：Slackへの通知など）
      
      - name: Notify on Failure
        if: failure()
        run: |
          echo "ステージング環境へのマイグレーションに失敗しました"
          # 失敗時に通知を送る処理をここに追加（例：Slackへの通知など） 