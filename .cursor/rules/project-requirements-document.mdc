---
description: 
globs: 
alwaysApply: true
---
# プロジェクト要件文書：Techquiz

## 1. プロジェクト概要
### 1.1 プロジェクト名
Techquiz

### 1.2 目的
プログラミング学習者向けの知識定着を促進するクイズアプリケーションを開発し、特にアウトプットが苦手な学習者でも取り組みやすい環境を提供する。

### 1.3 対象ユーザー
- プログラミング初学者
- Web開発学習者
- AIアプリケーション開発の学習者
- 技術知識の強化を図りたい開発者

## 2. 機能要件

### 2.1 ユーザー管理機能
- ユーザー認証
- 基本的なユーザープロフィール管理
- パスワードリセット機能

### 2.2 クイズ機能
- カテゴリ別・難易度別クイズの提供
  - カテゴリ: HTML/CSS、Ruby、Git、Linuxコマンド、Python、Azure ML等
  - 難易度: 初級・中級・上級の3段階
- 多様な問題形式（選択式、穴埋め等）の実装
- ヒント表示機能
- 即時フィードバック機能

### 2.3 学習記録機能
- クイズの結果保存
- 分野ごとの正答率・得点履歴の記録

## 3. 非機能要件

### 3.1 ユーザビリティ
- モバイルファースト設計
- スマートフォンに最適化されたレスポンシブデザイン
- 直感的なUI/UX設計

### 3.2 パフォーマンス
- 画面遷移の迅速性
- 効率的なデータロード

### 3.3 セキュリティ
- ユーザー認証の安全性確保
- データ保護対策
- 適切なアクセス制御

## 4. 技術スタック

### 4.1 フロントエンド
- HTML/CSS
- JavaScript
- TypeScript
- React
- Tailwind CSS
- Bolt.newで生成したUI
- Viteビルドツール

### 4.2 バックエンド
- Python
- Django
- Supabase Python Client

### 4.3 データベース
- Supabase

### 4.4 認証
- Django Authentication
- Supabase Authentication

### 4.5 デプロイ環境
- AWS（本番環境）
  - S3
  - CloudFront
- Render（開発/ステージング環境）

### 4.6 CI/CD
- GitHub Actions
- Docker
  - Python 3.11 (Django)
  - Node.js (React)

## 5. 画面構成

### 5.1 ホーム画面
- アプリ概要表示
- カテゴリー選択インターフェース

### 5.2 ログイン/登録画面
- ユーザー認証フォーム
- ソーシャルログインオプション
- パスワードリセット機能

### 5.3 クイズ選択画面
- カテゴリー選択
- 難易度選択
- 前回の成績表示

### 5.4 クイズ実行画面
- 問題表示
- 選択肢表示
- 進捗バー表示

### 5.5 結果画面
- スコア表示
- 正誤一覧
- 改善提案

### 5.6 ユーザーダッシュボード
- 学習統計グラフ
- 学習履歴

## 6. 前提条件・制約

### 6.1 開発環境
- Node.js (v18以上)
- Supabaseアカウント
- Git/GitHub
- Cursor
